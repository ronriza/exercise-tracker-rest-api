{"version":3,"sources":["fire.js","components/ExerciseRow.js","components/SortArrow.js","components/ExerciseTable.js","components/LoadingSymbol.js","pages/HomePage.js","pages/EditPage.js","pages/CreatePage.js","pages/LoginPage.js","components/NavbarCustom.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","err","console","error","stack","fire","ExerciseRow","exercise","onEdit","onDelete","className","name","reps","sets","unit","weight","Math","round","String","date","getUTCMonth","padStart","getUTCDate","getUTCFullYear","slice","class","onClick","_id","SortArrow","id","sortCriteria","field","direction","ExerciseTable","exercises","useState","setSortCriteria","sortedExercises","sort","a","b","changeCritera","length","Container","Row","Col","Table","striped","hover","map","i","Alert","variant","LoadingSymbol","HomePage","setExerciseToEdit","user","history","useHistory","setExercises","loading","setLoading","getIdToken","token","fetch","method","headers","response","status","loadExercises","json","alert","exerciseToEdit","push","forEach","item","Date","useEffect","EditPage","setName","setReps","setSets","weightInLbs","setWeight","setUnit","setDate","editExercise","body","JSON","stringify","md","Card","Body","Title","Form","Group","controlId","Label","Control","type","value","onChange","target","Check","inline","checked","label","Button","htmlFor","e","CreatePage","addExercise","newExercise","placeholder","LoginPage","email","setEmail","password","setPassword","failedLogin","setFailedLogin","failedSignUp","setFailedSignUp","onSubmit","preventDefault","auth","signInWithEmailAndPassword","catch","signInAnonymously","createUserWithEmailAndPassword","NavbarCustom","isLoggedin","Navbar","bg","Brand","Nav","Link","as","to","signOut","App","setUser","isLoggedIn","setIsLoggedIn","waiting","setWaiting","onAuthStateChanged","setTimeout","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.733fd583.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nimport \"firebase/auth\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDHZODaQPsJIK2tfqHuSZ0-tH5oxozyUnA\",\n    authDomain: \"exercise-tracker-effea.firebaseapp.com\",\n    projectId: \"exercise-tracker-effea\",\n    storageBucket: \"exercise-tracker-effea.appspot.com\",\n    messagingSenderId: \"979502751935\",\n    appId: \"1:979502751935:web:ddffa1f92fa5248e0ea60a\"\n};\n\ntry {\n    firebase.initializeApp(firebaseConfig)\n} catch (err) {\n    console.error('Firebase initialization error', err.stack)\n}\n\nconst fire = firebase\nexport default fire","import React from 'react';\nimport { MdEdit, MdDelete } from \"react-icons/md\";\n\nfunction ExerciseRow({ exercise, onEdit, onDelete }) {\n    const deleteById = () => {\n        onDelete(exercise._id)\n    }\n\n    const editByObject = () => {\n        onEdit(exercise)\n    }\n\n\n    return (\n        <>\n\n            <tr className=\"text-center\">\n                <td>{exercise.name}</td>\n                <td>{exercise.reps}</td>\n                <td>{exercise.sets}</td>\n                <td>{`${(exercise.unit==='lbs') ? exercise.weight : Math.round(exercise.weight * 0.45359237)} ${exercise.unit}`}</td>\n                <td>{`${String(exercise.date.getUTCMonth()+1).padStart(2,'0')}-${String(exercise.date.getUTCDate()).padStart(2,'0')}-${String(exercise.date.getUTCFullYear()).slice(2)}`}</td>\n                <td><MdEdit class=\"clickable\" onClick={editByObject} /></td>\n                <td><MdDelete class=\"clickable\" onClick={deleteById} /></td>\n            </tr>\n        </>\n\n    )\n}\n\nexport default ExerciseRow;","import React from 'react'\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from 'react-icons/md'\n\n\nfunction SortArrow({ id, sortCriteria }) {\n    if (sortCriteria.field === id) {\n        if (sortCriteria.direction === 'ascending') {\n            return <MdKeyboardArrowUp />\n\n        } else {\n            return <MdKeyboardArrowDown />\n        }\n\n    } else {\n        return <MdKeyboardArrowDown className=\"hidden\" />\n    }\n\n}\n\nexport default SortArrow","import React, { useState } from 'react';\nimport ExerciseRow from './ExerciseRow'\nimport Alert from 'react-bootstrap/Alert'\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport SortArrow from './SortArrow'\n\nfunction ExerciseTable({ exercises, onEdit, onDelete }) {\n    const [sortCriteria, setSortCriteria] = useState({ field: 'date', direction: 'descending' })\n\n    let sortedExercises = [...exercises]\n\n    sortedExercises.sort((a, b) => {\n    \n        if (a[sortCriteria.field] < b[sortCriteria.field]) {\n            return sortCriteria.direction === 'ascending' ? -1 : 1\n        } else if (a[sortCriteria.field] > b[sortCriteria.field]) {\n            return sortCriteria.direction === 'ascending' ? 1 : -1\n        } else {\n            if (a.date > b.date){\n                return -1\n            } else {\n                return 1\n            }\n        }\n    })\n\n    const changeCritera = (field) => {\n        let direction = 'descending'\n        if (sortCriteria.field === field && sortCriteria.direction === 'descending') {\n            direction = 'ascending'\n        }\n        setSortCriteria({ field, direction })\n    }\n\n\n    if (exercises.length > 0) {\n        return (\n            <>\n                <Container>\n                    <Row>\n                        <Col className=\"mt-3\">\n                            <h3 className='text-center'>Exercise List</h3>\n                            <Table striped hover className=\"mt-3\">\n                                <thead>\n                                    <tr className=\"text-center\">\n                                        <th className=\"clickable\" id=\"name\" onClick={() => changeCritera('name')}>Name  <SortArrow id=\"name\" sortCriteria={sortCriteria} /></th>\n                                        <th className=\"clickable\" id=\"reps\" onClick={() => changeCritera('reps')}>Reps  <SortArrow id=\"reps\" sortCriteria={sortCriteria} /></th>\n                                        <th className=\"clickable\" id=\"sets\" onClick={() => changeCritera('sets')}>Sets  <SortArrow id=\"sets\" sortCriteria={sortCriteria} /></th>\n                                        <th className=\"clickable\" id=\"weight\" onClick={() => changeCritera('weight')}>Weight  <SortArrow id=\"weight\" sortCriteria={sortCriteria} /></th>\n                                        <th className=\"clickable\" id=\"date\" onClick={() => changeCritera('date')}>Date  <SortArrow id=\"date\" sortCriteria={sortCriteria} /></th>\n                                        <th>Edit</th>\n                                        <th>Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {sortedExercises.map((exercise, i) => <ExerciseRow exercise={exercise} onEdit={onEdit} onDelete={onDelete} key={i} />)}\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </>\n        )\n\n    } else {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"mt-3\">\n                        <h3 className='text-center'>Exercise List</h3>\n                        <Alert variant='info' className=\"text-center\">No exercises to display</Alert>\n\n                    </Col>\n                </Row>\n            </Container>\n\n\n        )\n\n    }\n\n}\n\nexport default ExerciseTable;","import React from 'react'\n\nfunction LoadingSymbol() {\n    return (\n        <div className=\"text-center mt-5\"><div className=\"lds-ring \"><div></div><div></div><div></div><div></div></div></div>\n    )\n}\n\nexport default LoadingSymbol","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ExerciseTable from '../components/ExerciseTable'\nimport LoadingSymbol from '../components/LoadingSymbol'\n\nfunction HomePage({ setExerciseToEdit, user }) {\n    const history = useHistory();\n    const [exercises, setExercises] = useState([]);\n    const [loading, setLoading] = useState(false)\n\n    const onDelete = async id => {\n        const token = await user.getIdToken()\n        const response = await fetch(`/exercises/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        if (response.status === 204) {\n            loadExercises(user)\n        } else {\n            const error = response.json()\n            alert(error.error)\n        }\n    }\n\n    const onEdit = async exerciseToEdit => {\n        setExerciseToEdit(exerciseToEdit);\n        history.push(\"/Edit\");\n    }\n\n    const loadExercises = async (user) => {\n        setLoading(true)\n        const token = await user.getIdToken();\n        const response = await fetch(`/exercises/`, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        if (response.status===200){\n            const exercises = await response.json()\n            exercises.forEach((item) => {\n                item.date = new Date(item.date)\n            })\n            setExercises(exercises);\n        } else{\n            const error = await response.json()\n            alert(error.error)\n        }\n\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        loadExercises(user);\n    }, [user]);\n\n    if (!loading) {\n        return (\n            <>\n                <ExerciseTable exercises={exercises} onEdit={onEdit} onDelete={onDelete} />\n            </>\n        )\n    } else {\n        return (\n            <LoadingSymbol />\n        )\n    }\n\n\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\n\nfunction EditPage({ exerciseToEdit, user }) {\n    const history = useHistory();\n    const [name, setName] = useState(exerciseToEdit.name);\n    const [reps, setReps] = useState(exerciseToEdit.reps);\n    const [sets, setSets] = useState(exerciseToEdit.sets);\n    const weightInLbs = (exerciseToEdit.unit===\"lbs\") ? exerciseToEdit.weight : Math.round(exerciseToEdit.weight * 0.45359237)\n    const [weight, setWeight] = useState(weightInLbs);\n    const [unit, setUnit] = useState(exerciseToEdit.unit);\n    const [date, setDate] = useState(`${String(exerciseToEdit.date.getUTCMonth()+1).padStart(2,'0')}-${String(exerciseToEdit.date.getUTCDate()).padStart(2,'0')}-${String(exerciseToEdit.date.getUTCFullYear()).slice(2)}`);\n\n    const editExercise = async () => {\n        const token = await user.getIdToken();\n        const response = await fetch(`/exercises/${exerciseToEdit._id}`, {\n            method: 'PUT',\n            body: JSON.stringify({ name: name, reps: reps, sets: sets, weight: weight, unit: unit, date: date }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        });\n        if (response.status === 200) {\n            alert(\"Successfully edited the exercise!\");\n        } else {\n            const error = await response.json()\n            alert(error.error);\n        }\n        history.push(\"/\");\n    };\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center\">\n                    <Col md={6} className=\"mb-5\">\n                        <Card className=\"shadow\">\n                            <Card.Body >\n                                <Card.Title>Edit Exercise</Card.Title>\n                                <Form>\n                                    <Form.Group className=\"mb-3\" controlId=\"formExerciseName\">\n                                        <Form.Label>Exercise Name</Form.Label>\n                                        <Form.Control type=\"text\" value={name} onChange={({ target }) =>\n                                            setName(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"formReps\">\n                                        <Form.Label>Number of Reps</Form.Label>\n                                        <Form.Control type=\"number\" value={reps} onChange={({ target }) =>\n                                            setReps(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"formSets\">\n                                        <Form.Label>Number of Sets</Form.Label>\n                                        <Form.Control type=\"number\" value={sets} onChange={({ target }) =>\n                                            setSets(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-1\" controlId=\"formWeight\">\n                                        <Form.Label>Weight</Form.Label>\n                                        <Form.Control type=\"number\" value={weight} onChange={({ target }) =>\n                                            setWeight(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Check inline checked={(\"lbs\" === unit) ? true : false} label=\"lbs\" name=\"unit\" type=\"radio\" id=\"lbs\" onChange={() =>\n                                            setUnit(\"lbs\")} />\n                                        <Form.Check inline checked={(\"kgs\" === unit) ? true : false} label=\"kgs\" name=\"unit\" type=\"radio\" id=\"kgs\" onChange={() =>\n                                            setUnit(\"kgs\")} />\n                                    </Form.Group>\n\n                                    <Form.Group className=\"mb-3\" controlId=\"formDate\">\n                                        <Form.Label>Date</Form.Label>\n                                        <Form.Control type=\"test\" value={date} onChange={({ target }) =>\n                                            setDate(target.value)} />\n                                    </Form.Group>\n                                    <Button variant=\"primary\" onClick={editExercise}>\n                                        Submit\n                                    </Button>\n\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n\n            <fieldset>\n                <legend>Edit An Exercise</legend>\n                <label htmlFor='name'>Name </label>\n                <input type='text' id='name' value={name} onChange={e => setName(e.target.value)} />\n                <br />\n                <label htmlFor='reps'># of Reps </label>\n                <input type='number' id='reps' value={reps} onChange={e => setReps(e.target.value)} />\n                <br />\n                <label htmlFor='sets'># of Sets </label>\n                <input type='number' id='sets' value={sets} onChange={e => setSets(e.target.value)} />\n                <br />\n                <label htmlFor='weight'>Weight </label>\n                <input type='number' id='weight' value={weight} onChange={e => setWeight(e.target.value)} />\n                <br />\n                <label htmlFor='unit'>Units </label>\n                <input type='text' id='unit' value={unit} onChange={e => setUnit(e.target.value)} />\n                <br />\n                <label htmlFor='date'>Date </label>\n                <input type='text' id='date' value={date} onChange={e => setDate(e.target.value)} />\n            </fieldset>\n            <button onClick={editExercise}>Save</button>\n\n        </>\n    )\n}\n\nexport default EditPage;","import React, { useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\n\n\nfunction CreatePage({ user }) {\n    const history = useHistory();\n    const [name, setName] = useState('');\n    const [reps, setReps] = useState('');\n    const [sets, setSets] = useState('');\n    const [weight, setWeight] = useState('');\n    const [unit, setUnit] = useState('lbs');\n    const [date, setDate] = useState('');\n\n    const addExercise = async () => {\n        const newExercise = { name, reps, sets, weight, unit, date };\n        const token = await user.getIdToken();\n        const response = await fetch('/exercises', {\n            method: 'POST',\n            body: JSON.stringify(newExercise),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        });\n        if (response.status === 201) {\n            alert(\"Successfully added the exercise!\");\n        } else {\n            const error = await response.json()\n            alert(error.error);\n        }\n        history.push(\"/\");\n    };\n\n\n\n    return (\n        <>\n            <Container className=\"mt-5\">\n                <Row className=\"justify-content-center\">\n                    <Col md={6} className=\"mb-5\">\n                        <Card className=\"shadow\">\n                            <Card.Body >\n                                <Card.Title>New Exercise</Card.Title>\n                                <Form>\n                                    <Form.Group className=\"mb-3\" controlId=\"formExerciseName\">\n                                        <Form.Label>Exercise Name</Form.Label>\n                                        <Form.Control type=\"text\" onChange={({ target }) =>\n                                            setName(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"formReps\">\n                                        <Form.Label>Number of Reps</Form.Label>\n                                        <Form.Control type=\"number\" onChange={({ target }) =>\n                                            setReps(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"formSets\">\n                                        <Form.Label>Number of Sets</Form.Label>\n                                        <Form.Control type=\"number\" onChange={({ target }) =>\n                                            setSets(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-1\" controlId=\"formWeight\">\n                                        <Form.Label>Weight</Form.Label>\n                                        <Form.Control type=\"number\" onChange={({ target }) =>\n                                            setWeight(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"formUnit\">\n                                        <Form.Check inline checked={(\"lbs\" === unit) ? true : false} label=\"lbs\" name=\"unit\" type=\"radio\" id=\"lbs\" onChange={() =>\n                                            setUnit(\"lbs\")} />\n                                        <Form.Check inline checked={(\"kgs\" === unit) ? true : false} label=\"kgs\" name=\"unit\" type=\"radio\" id=\"kgs\" onChange={() =>\n                                            setUnit(\"kgs\")} />\n                                    </Form.Group>\n\n                                    <Form.Group className=\"mb-3\" controlId=\"formDate\">\n                                        <Form.Label>Date</Form.Label>\n                                        <Form.Control type=\"test\" placeholder=\"MM-DD-YY\" onChange={({ target }) =>\n                                            setDate(target.value)} />\n                                    </Form.Group>\n                                    <Button variant=\"primary\" onClick={addExercise}>\n                                        Submit\n                                    </Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            {/* <fieldset>\n                <legend>Add An Exercise</legend>\n                <label htmlFor='name'>Name </label>\n                <input type='text' id='name' value={name} onChange={e => setName(e.target.value)} />\n                <br/>\n                <label htmlFor='reps'># of Reps </label>\n                <input type='number' id='reps' value={reps} onChange={e => setReps(e.target.value)} />\n                <br/>\n                <label htmlFor='sets'># of Sets </label>\n                <input type='number' id='sets' value={sets} onChange={e => setSets(e.target.value)} />\n                <br/>\n                <label htmlFor='weight'>Weight </label>\n                <input type='number' id='weight' value={weight} onChange={e => setWeight(e.target.value)} />\n                <br/>\n                <label htmlFor='unit'>Units </label>\n                <input type='text' id='unit' value={unit} onChange={e => setUnit(e.target.value)} />\n                <br/>\n                <label htmlFor='date'>Date </label>\n                <input type='text' id='date' value={date} placeholder='MM-DD-YY' onChange={e => setDate(e.target.value)} />\n\n            </fieldset>\n            <button onClick={addExercise}>Add</button> */}\n\n        </>\n    )\n}\n\nexport default CreatePage;","import React, { useState } from 'react';\nimport fire from '../fire.js'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Alert from 'react-bootstrap/Alert'\n\n\nfunction LoginPage() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [failedLogin, setFailedLogin] = useState(false);\n    const [failedSignUp, setFailedSignUp] = useState(false);\n\n    const signIn = (e) => {\n        e.preventDefault()\n        fire.auth().signInWithEmailAndPassword(email, password)\n            .catch((error) => {\n                setFailedLogin(true)\n            });\n    }\n\n    const anonymousSignin = (e) => {\n        fire.auth().signInAnonymously()\n            .catch((error) => {\n                setFailedLogin(true)\n            })\n    }\n\n    const signUp = (e) => {\n        e.preventDefault()\n        fire.auth().createUserWithEmailAndPassword(email, password)\n            .catch((error) => {\n                setFailedSignUp(true)\n            })\n    }\n\n\n    return (\n        <div className=\"home pt-5\">\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col md className=\"mb-5\">\n                        <Card className=\"shadow\">\n                            <Card.Body >\n                                {failedLogin && <Alert variant=\"danger\">Log in Failed</Alert>}\n                                <Card.Title>Log In</Card.Title>\n                                <Form onSubmit={signIn}>\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                        <Form.Label>Email address</Form.Label>\n                                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={({ target }) =>\n                                            setEmail(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={({ target }) =>\n                                            setPassword(target.value)} />\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Log in\n                                    </Button>\n                                    <Button className=\"ms-3\" variant=\"primary\" onClick={anonymousSignin}>\n                                        Log in Anonymously\n                                    </Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n\n\n                    </Col>\n\n                    <Col md className=\"mb-5\">\n                        <Card className=\"shadow\">\n                            <Card.Body>\n                                {failedSignUp && <Alert variant=\"danger\">Sign Up Failed</Alert>}\n                                <Card.Title>Register</Card.Title>\n                                <Form onSubmit={signUp}>\n                                    <Form.Group className=\"mb-3\" controlId=\"formRegisterEmail\">\n                                        <Form.Label>Email address</Form.Label>\n                                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={({ target }) =>\n                                            setEmail(target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"formRegisterPassword\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={({ target }) =>\n                                            setPassword(target.value)} />\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Register\n                                    </Button>\n                                </Form>\n                            </Card.Body>\n\n                        </Card>\n\n                    </Col>\n\n\n                </Row>\n\n            </Container>\n\n\n        </div>\n    )\n}\n\nexport default LoginPage;","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport fire from '../fire.js'\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nfunction NavbarCustom({ isLoggedin }) {\n  const history = useHistory();\n\n\n  const signOut = () => {\n    fire.auth().signOut()\n    history.push('/')\n  };\n\n  if (isLoggedin) {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>Exercise Tracker</Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to={'/'}>Exercise List</Nav.Link>\n            <Nav.Link as={Link} to={'/Create'}>Add Exercise</Nav.Link>\n\n          </Nav>\n          <Nav>\n            <Nav.Link onClick={signOut}>Logout</Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n\n    )\n  } else {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand>Exercise Tracker</Navbar.Brand>\n        </Container>\n      </Navbar>\n    )\n\n  }\n\n\n}\n\nexport default NavbarCustom","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport fire from './fire.js'\nimport React, { useState, useEffect } from 'react';\nimport HomePage from './pages/HomePage';\nimport EditPage from './pages/EditPage';\nimport CreatePage from './pages/CreatePage'\nimport LoginPage from './pages/LoginPage'\nimport NavbarCustom from './components/NavbarCustom'\nimport LoadingSymbol from './components/LoadingSymbol';\n\nfunction App() {\n  const [exerciseToEdit, setExerciseToEdit] = useState([]);\n  const [user, setUser] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [waiting, setWaiting] = useState(true)\n\n  fire.auth().onAuthStateChanged((user) => {\n    if (user) {\n      setUser(user)\n      setIsLoggedIn(true)\n    } else {\n      setIsLoggedIn(false)\n      setUser(false)\n    }\n    setWaiting(false)\n  })\n\n  useEffect(() => {\n    setTimeout(() => setWaiting(false), 500)\n  }, [])\n\n  if (waiting) {\n    return (\n      <LoadingSymbol />\n    )\n  } else {\n    return (\n      <div className=\"App\">\n        <Router>\n          {!isLoggedIn\n            ? (\n              <header className=\"App-header\">\n                <NavbarCustom isLoggedin={isLoggedIn} />\n                <Switch>\n                  <Route path=\"/\" exact>\n                    <LoginPage />\n                  </Route>\n                </Switch>\n              </header>\n            )\n            : (\n              <header className=\"App-header\">\n                <NavbarCustom isLoggedin={isLoggedIn} />\n                <Switch>\n                  <Route path=\"/\" exact>\n                    <HomePage user={user} setExerciseToEdit={setExerciseToEdit} />\n                  </Route>\n                  <Route path=\"/Edit\" exact>\n                    <EditPage user={user} exerciseToEdit={exerciseToEdit} />\n                  </Route>\n                  <Route path=\"/Create\" exact>\n                    <CreatePage user={user} />\n                  </Route>\n                </Switch>\n              </header>\n            )}\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}